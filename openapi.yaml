openapi: "3.0.1"
info:
  title: "Home Assistant Plugin"
  description: "A plugin that allows the user to control smart home devices via Home Assistant."
  version: "v1"
servers:
  - url: "https://creative-praline-359ad5.netlify.app/.netlify/functions/proxy"
paths:
  # Endpoint for turning on a light
  /api/services/light/turn_on:
    post:
      operationId: "turnOnLight"
      summary: "Turn on an individual light entity. "
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                entity_id:
                  type: "string"
                  description: "The entity ID of the light to turn on."
      responses:
        "200":
          description: "OK"
  # Endpoint for turning off a light
  /api/services/light/turn_off:
    post:
      operationId: "turnOffLight"
      summary: "Turn off an individual light entity"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                entity_id:
                  type: "string"
                  description: "The entity ID of the light to turn off."
      responses:
        "200":
          description: "OK"
  # New endpoint for playing media
  /api/services/media_player/media_play:
    post:
      operationId: "playMedia"
      summary: "Play media on an individual media player entity"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                entity_id:
                  type: "string"
                  description: "The entity ID of the media player to play."
      responses:
        "200":
          description: "OK"
  # New endpoint for pausing media
  /api/services/media_player/media_pause:
    post:
      operationId: "pauseMedia"
      summary: "Pause or turn off media on an individual media player entity"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                entity_id:
                  type: "string"
                  description: "The entity ID of the media player to pause."
      responses:
        "200":
          description: "OK"
  # New endpoint for joining media players
  /api/services/media_player/join:
    post:
      operationId: "joinMediaPlayers"
      summary: "Join individual media players together"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                entity_id:
                  type: "string"
                  description: "The entity ID of the master media player."
                other_entity_ids:
                  type: "array"
                  items:
                    type: "string"
                  description: "A list of entity IDs of the media players to join to the master."
      responses:
        "200":
  # New endpoint for joining media players
  /api/services/media_player/join:
    post:
      operationId: "joinMediaPlayers"
      summary: "Join individual media players together"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                entity_id:
                  type: "string"
                  description: "The entity ID of the master media player."
                other_entity_ids:
                  type: "array"
                  items:
                    type: "string"
                  description: "A list of entity IDs of the media players to join to the master."
      responses:
        "200":
          description: "OK"
  # New endpoint for unjoining media players
  /api/services/media_player/unjoin:
    post:
      operationId: "unjoinMediaPlayers"
      summary: "Unjoin individual media players"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                entity_id:
                  type: "string"
                  description: "The entity ID of the media player to unjoin."
      responses:
        "200":
          description: "OK"
  # Endpoints for shades
  /api/services/cover/open_cover:
    post:
      tags:
        - Shades
      operationId: "openShades"
      summary: "Open shades"
      description: "Open individual shades. Use entity IDs of the shades you want to open. Example of shades are Window Shade 1, Window Shade 2."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                entity_id:
                  type: "array"
                  items:
                    type: "string"
                  description: "The entity IDs of the shades to open."
      responses:
        "200":
          description: "OK"

  /api/services/cover/close_cover:
    post:
      tags:
        - Shades
      operationId: "closeShades"
      summary: "Close shades"
      description: "Close individual shades. Use entity IDs of the shades you want to close. Example of shades are Window Shade"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                entity_id:
                  type: "array"
                  items:
                    type: "string"
                  description: "The entity IDs of the shades to close."
      responses:
        "200":
          description: "OK"

  # Endpoints for garage door
  /api/services/cover/open_cover:
    post:
      tags:
        - Garage Door
      operationId: "openGarageDoor"
      summary: "Open garage door"
      description: "Open the garage door. Use the entity ID of the garage door. Example of garage doors is tpg-garage_door."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                entity_id:
                  type: "string"
                  description: "The entity ID of the garage door to open."
      responses:
        "200":
          description: "OK"

  /api/services/cover/close_cover:
    post:
      tags:
        - Garage Door
      operationId: "closeGarageDoor"
      summary: "Close garage door"
      description: "Close the garage door. Use the entity ID of the garage door. Example of garage doors is tpg-garage_door."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                entity_id:
                  type: "string"
                  description: "The entity ID of the garage door to close."
      responses:
        "200":
          description: "OK"
  # New endpoint for selecting a source for a media player
  /api/services/media_player/select_source:
    post:
      operationId: "selectSource"
      summary: "Select what music to play on an individual media player"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                entity_id:
                  type: "string"
                  description: "The entity ID of the media player."
                source:
                  type: "string"
                  description: "The source to select for the media player."
                  enum:
                    - "Blind Melon & Similar Artists Station"
                    - "Tom Petty & The Heartbreakers & Similar Artists Station"
                    - "Tash Sultana & Similar Artists Station"
                    - "Fruit Bats & Similar Artists Station"
                    - "The Revivalists Radio"
      responses:
        "200":
          description: "OK"
